<project name="CheckstylePlugin" default="build.dist" basedir=".">

	<!-- properties that likely change between releases -->
	<property name="plugin.version" value="4.0.0" />
	<property name="plugin.version.postfix" value="-final" />
	<property name="checkstyle.jar" value="checkstyle-all-4.0.jar" />
	<property name="checkstyle-optional.jar" value="extension-libraries/checkstyle-optional-4.0.jar" />

	<!-- properties that remain relativly fixed -->
	<property name="plugin.name" value="com.atlassw.tools.eclipse.checkstyle_${plugin.version}" />

	<property name="dist.basedir" value="${basedir}/dist/" />
	<property name="dist.basedir.tmpdir" value="${basedir}/dist/tmp" />
	<property name="feature.project.dir" value="${basedir}/feature" />

	<property name="bin.dist.file" value="${plugin.name}${plugin.version.postfix}-bin.zip" />
	<property name="src.dist.file" value="${plugin.name}${plugin.version.postfix}-src.zip" />
	<property name="plugin.jar.file" value="${plugin.name}.jar" />
	<property name="feature.jar.file" value="${plugin.name}-feature.jar" />
	<property name="update.site.file" value="${plugin.name}${plugin.version.postfix}-updatesite.zip" />
	
	<property name="checkstyle.docs.dir" value="../checkstyle/target/docs"/>

	<!-- ==================================================== -->
	<!--   CLEAN TARGET                                       -->
	<!-- ==================================================== -->
	<target name="clean" description="Cleans any directories and generated files">
		<delete dir="${dist.basedir}" failonerror="false" quiet="true" />
	</target>

	<!-- ==================================================== -->
	<!--   BUILD TARGET AREA                                  -->
	<!-- ==================================================== -->
	<target name="build.target.area" description="Build the directory structure of the target area">
		<mkdir dir="${dist.basedir}" />
		<mkdir dir="${dist.basedir.tmpdir}" />
	</target>

	<!-- ==================================================== -->
	<!--   DISTRIBUTION TARGET                                -->
	<!-- ==================================================== -->
	<target name="build.dist" depends="build.bindist,build.srcdist,build.local.update.site,build.plugin.website" />

	<!-- ==================================================== -->
	<!--   BINARY DISTRIBUTION TARGET                         -->
	<!-- ==================================================== -->
	<target name="build.bindist" depends="build.target.area,build.plugin.docs" description="Builds the binary distribution file">

		<!-- prefix paths within the binary dist file -->
		<property name="plugins.path" value="plugins/${plugin.name}" />
		<property name="features.path" value="features/${plugin.name}" />

		<!-- jar the contents of the output dirs into the tmp directory -->
		<jar destfile="${dist.basedir.tmpdir}/CheckstylePlugin.jar" basedir="./bin" index="true" />
		<jar destfile="${dist.basedir.tmpdir}/NLS.jar" basedir="./binnls" index="true" />
		<jar destfile="${dist.basedir.tmpdir}/CheckstyleMetadata.jar" basedir="./metadata" index="true" />

		<!-- copy the plugin contents to the tmp dir -->
		<copy todir="${dist.basedir.tmpdir}/">
			<fileset dir="." includes="${checkstyle.jar}" />
			<fileset dir="." includes="${checkstyle-optional.jar}" />
			<fileset dir="." includes="plugin.xml" />
			<fileset dir="." includes="*.properties" excludes="build.properties" />
			<fileset dir="." includes="toc.xml" />
			<fileset dir="." includes="README.html" />
			<fileset dir="." includes="sun_checks.xml" />
			<fileset dir="." includes="META-INF/**" />
			<fileset dir="." includes="schema/**" />
			<fileset dir="." includes="icons/**" />
			<fileset dir="." includes="license/**" />
		</copy>

		<!-- zip the contents into the binary dist file -->
		<zip destfile="${dist.basedir}/${bin.dist.file}" update="false">
			<zipfileset dir="${dist.basedir.tmpdir}" prefix="${plugins.path}" includes="**/*" />
			<zipfileset dir="${feature.project.dir}" prefix="${features.path}" includes="**/*" />
		</zip>

		<!-- build the jars for the update site -->
		<zip destfile="${dist.basedir}/${plugin.jar.file}">
			<zipfileset dir="${dist.basedir.tmpdir}" includes="**/*" />
		</zip>
		<jar destfile="${dist.basedir}/${feature.jar.file}">
			<zipfileset dir="${feature.project.dir}" includes="**/*" />
		</jar>

		<!-- remove the temp directory -->
		<delete dir="${dist.basedir.tmpdir}" failonerror="false" quiet="true" />
	</target>

	<!-- ==================================================== -->
	<!--   SOURCE DISTRIBUTION TARGET                         -->
	<!-- ==================================================== -->
	<target name="build.srcdist" depends="build.target.area" description="Builds the source distribution file">

		<zip destfile="${dist.basedir}/${src.dist.file}" update="false">

			<zipfileset dir="." includes="${checkstyle.jar}" />
			<zipfileset dir="." includes="${checkstyle-optional.jar}" />
			<zipfileset dir="." includes="plugin.xml" />
			<zipfileset dir="." includes="*.properties" />
			<zipfileset dir="." includes="toc.xml" />
			<zipfileset dir="." includes="README.html" />
			<zipfileset dir="." includes="sun_checks.xml" />
			<zipfileset dir="." includes="META-INF/**" />
			<zipfileset dir="." includes="schema/**" />
			<zipfileset dir="." includes="icons/**" />
			<zipfileset dir="." includes="license/**" />
			<zipfileset dir="." includes="doc/**" />
			<zipfileset dir="." includes="feature/**" />
			<zipfileset dir="." includes="src/**" />
			<zipfileset dir="." includes="nls/**" />
			<zipfileset dir="." includes="CheckConfig_Checkstyle.xml" />
			<zipfileset dir="." includes="build-plugin.xml" />
			<zipfileset dir="." includes=".*" />
		</zip>
	</target>

	<!-- ==================================================== -->
	<!--   BUILDS A LOCAL UPDATE SITE                         -->
	<!-- ==================================================== -->
	<target name="build.local.update.site" depends="build.bindist" description="Builds a local update site">
	
		<!-- prepare the site.xml file -->
		<copy file="${basedir}/update-site/local-site.template" tofile="${dist.basedir.tmpdir}/site.xml" />
		<replace file="${dist.basedir.tmpdir}/site.xml" token="@feature.jar.file@" value="${feature.jar.file}" />
		<replace file="${dist.basedir.tmpdir}/site.xml" token="@plugin.version@" value="${plugin.version}" />

		<!-- package the local update site -->
		<zip destfile="${dist.basedir}/${update.site.file}" update="false">
			<zipfileset dir="${dist.basedir.tmpdir}" includes="site.xml" />
			<zipfileset dir="${dist.basedir}" prefix="features" includes="${feature.jar.file}" />
			<zipfileset dir="${dist.basedir}" prefix="plugins" includes="${plugin.jar.file}" />
		</zip>
		
		<!-- remove the temp directory -->
		<delete dir="${dist.basedir.tmpdir}" failonerror="false" quiet="true" />
	</target>

	<!-- ==================================================== -->
	<!--   BUILD THE PLUGIN ONLINE DOCUMENTATION              -->
	<!-- ==================================================== -->
	<target name="build.plugin.docs">
		<copy todir="${dist.basedir.tmpdir}/doc">			
			<fileset dir="${basedir}/doc" includes="*.css" />
			<fileset dir="${basedir}/doc" includes="images/**" />
		</copy>
		<copy todir="${dist.basedir.tmpdir}/doc/csdocs">			
			<fileset dir="${checkstyle.docs.dir}" includes="**/*" />
		</copy>
		
		<xslt style="${basedir}/doc/generate_docs.xsl" basedir="${basedir}/doc" includes="*.html" destdir="${dist.basedir.tmpdir}/doc"/>
	</target>

	<!-- ==================================================== -->
	<!--   BUILD THE PLUGIN WEBSITE                           -->
	<!-- ==================================================== -->
	<target name="build.plugin.website">
		<copy todir="${dist.basedir}/website">
			<fileset dir="${basedir}/doc" includes="*.css" />
			<fileset dir="${basedir}/doc" includes="images/**" />
		</copy>
		<copy todir="${dist.basedir}/website/update">
			<fileset dir="${basedir}/update-site" includes="site.xml" />
		</copy>
		<copy todir="${dist.basedir}/website/dtds" flatten="true">
			<fileset dir="${basedir}/metadata" includes="**/*.dtd" />
		</copy>
		
		<xslt style="${basedir}/doc/generate_docs.xsl" basedir="${basedir}/doc" includes="*.html" destdir="${dist.basedir}/website">
			<param name="style" expression="website"/>
		</xslt>
	</target>

	<!-- ==================================================== -->
	<!--   Release through Sourceforge File Release System    -->
	<!-- ==================================================== -->
	<!--
	<taskdef name="sfpublish" classname="org.apache.tools.ant.taskdefs.optional.sourceforge.SourceForgePublish" />

	<target name="sampletarget">

		<tstamp>
			<format property="release_date" pattern="MM/dd/yyyy hh:mm" locale="en" unit="minute" />
		</tstamp>

		<sfpublish releasename="v${4.0.0}${}" packagename="Eclipse Checkstyle Plug-in" packagehidden="no" hidden="yes" projectshortname="eclipse-cs" projectname="Eclipse Checkstyle Plug-in" username="myUsername" password="myPassword" releasedate="${release_date}">
			<filespec file="${dist.basedir}/${bin.dist.file}" filetype="zip_file" processortype="platform_independent" />
			<filespec file="${dist.basedir}/${src.dist.file}" filetype="zip_file" processortype="platform_independent" />
		</sfpublish>
		<sfpublish releasename="v${4.0.0}${plugin.version.postfix}" packagename="eclipse-cs Update Site" packagehidden="no" hidden="yes" projectshortname="eclipse-cs" projectname="Eclipse Checkstyle Plug-in" username="myUsername" password="myPassword" releasedate="${release_date}">
			<filespec file="${dist.basedir}/${plugin.jar.file}" filetype="jar_file" processortype="platform_independent" />
			<filespec file="${dist.basedir}/${feature.jar.file}" filetype="jar_file" processortype="platform_independent" />
		</sfpublish>
	</target>
	-->

</project>