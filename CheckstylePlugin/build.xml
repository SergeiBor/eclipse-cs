<project name="CheckstylePlugin" default="build.dist" basedir=".">

	<property environment="env" />

	<property name="plugin.version" value="4.0.0" />

	<property name="bin.dist.basedir" value="target/dist/bin" />
	<property name="bin.dist.dir" value="${bin.dist.basedir}/plugins/com.atlassw.tools.eclipse.checkstyle_${plugin.version}" />

	<property name="src.dist.basedir" value="target/dist/src" />
	<property name="src.dist.dir" value="${src.dist.basedir}/com.atlassw.tools.eclipse.checkstyle_${plugin.version}-src" />

	<property name="check.config" value="CheckConfig_Checkstyle.xml" />

	<property name="checkstyle.jar" value="checkstyle-all-4.0-beta5.jar" />
	<property name="checkstyle-optional.jar" value="checkstyle-optional-4.0-beta5.jar" />



	<!-- ==================================================== -->
	<!--   CLEAN TARGET                                       -->
	<!-- ==================================================== -->
	<target name="clean" description="Cleans any directories and generated files">
		<delete dir="target" failonerror="false" quiet="true" />
		<delete includeemptydirs="true" failonerror="false" quiet="true">
			<fileset dir="bin" includes="**" excludes="bin" />
		</delete>
		<mkdir dir="bin" />
	</target>

	<!-- ==================================================== -->
	<!--   BUILD TARGET AREA                                  -->
	<!-- ==================================================== -->
	<target name="build.target.area" description="Build the directory structure of the target area">
		<mkdir dir="target" />
		<mkdir dir="target/dist" />
	</target>

	<!-- ==================================================== -->
	<!--   JAR TARGET                                         -->
	<!-- ==================================================== -->
	<target name="jar.plugin" depends="build.target.area" description="Jars up all the files that go into the plug-in jar file">
		<mkdir dir="${bin.dist.dir}" />
		<jar destfile="${bin.dist.dir}/CheckstylePlugin.jar" basedir="bin" index="true" />
		<jar destfile="${bin.dist.dir}/NLS.jar" basedir="binnls" index="true" />
	</target>

	<!-- ==================================================== -->
	<!--   DISTRIBUTION TARGET                                -->
	<!-- ==================================================== -->
	<target name="build.dist" depends="build.bindist,build.srcdist">
	</target>

	<!-- ==================================================== -->
	<!--   BINARY DISTRIBUTION TARGET                         -->
	<!-- ==================================================== -->
	<target name="build.bindist" depends="build.target.area, jar.plugin" description="Copies all the necessary files to the distribution directory">
		<mkdir dir="${bin.dist.dir}" />
		<copy file="${checkstyle.jar}" todir="${bin.dist.dir}" />
		<copy file="extension-libraries/${checkstyle-optional.jar}" todir="${bin.dist.dir}/extension-libraries" />
		<copy file="plugin.xml" todir="${bin.dist.dir}" />
		<copy file="plugin.properties" todir="${bin.dist.dir}" />
		<copy file="plugin_de.properties" todir="${bin.dist.dir}" />
		<copy file="plugin_fr.properties" todir="${bin.dist.dir}" />
		<copy file="toc.xml" todir="${bin.dist.dir}" />
		<copy file="README.html" todir="${bin.dist.dir}" />
		<copy file="sun_checks.xml" todir="${bin.dist.dir}" />
		<copy file="DefaultCheckConfigurations.xml" todir="${bin.dist.dir}" />
		<copy todir="${bin.dist.dir}/doc">
			<fileset dir="doc" />
		</copy>
		<copy todir="${bin.dist.dir}/license">
			<fileset dir="license" />
		</copy>
		<copy todir="${bin.dist.dir}/META-INF">
			<fileset dir="META-INF" />
		</copy>
		<copy todir="${bin.dist.dir}/icons">
			<fileset dir="icons" />
		</copy>
		<copy todir="${bin.dist.dir}/schema">
			<fileset dir="schema" />
		</copy>
		<delete file="${bin.dist.dir}.zip" />
		<zip destfile="${bin.dist.dir}.zip" basedir="${bin.dist.basedir}" update="false" />
	</target>

	<!-- ==================================================== -->
	<!--   SOURCE DISTRIBUTION TARGET                         -->
	<!-- ==================================================== -->
	<target name="build.srcdist" depends="build.target.area" description="Copies all the necessary files to the distribution directory">
		<mkdir dir="${src.dist.dir}" />
		<copy file="${checkstyle.jar}" todir="${src.dist.dir}" />
		<copy file="extension-libraries/${checkstyle-optional.jar}" todir="${src.dist.dir}/extension-libraries" />
		<copy file="plugin.xml" todir="${src.dist.dir}" />
		<copy file="plugin.properties" todir="${src.dist.dir}" />
		<copy file="plugin_de.properties" todir="${src.dist.dir}" />
		<copy file="plugin_fr.properties" todir="${src.dist.dir}" />
		<copy file="toc.xml" todir="${src.dist.dir}" />
		<copy file="README.html" todir="${src.dist.dir}" />
		<copy file="sun_checks.xml" todir="${src.dist.dir}" />
		<copy file="CheckConfig_Checkstyle.xml" todir="${src.dist.dir}" />
		<copy file="DefaultCheckConfigurations.xml" todir="${src.dist.dir}" />
		<copy file="build.xml" todir="${src.dist.dir}" />
		<copy file=".checkstyle" todir="${src.dist.dir}" />
		<copy file=".project" todir="${src.dist.dir}" />
		<copy file=".classpath" todir="${src.dist.dir}" />
		<copy todir="${src.dist.dir}/doc">
			<fileset dir="doc" />
		</copy>
		<copy todir="${src.dist.dir}/license">
			<fileset dir="license" />
		</copy>
		<copy todir="${src.dist.dir}/src">
			<fileset dir="src" />
			<fileset dir="nls" />
		</copy>
		<copy todir="${src.dist.dir}/nls">
			<fileset dir="nls" />
		</copy>
		<copy todir="${src.dist.dir}/META-INF">
			<fileset dir="META-INF" />
		</copy>
		<copy todir="${src.dist.dir}/icons">
			<fileset dir="icons" />
		</copy>
		<copy todir="${src.dist.dir}/schema">
			<fileset dir="schema" />
		</copy>
		<delete file="${src.dist.dir}.zip" />
		<zip destfile="${src.dist.dir}.zip" basedir="${src.dist.basedir}" />
	</target>

	<!-- ==================================================== -->
	<!--   DEBUG TARGETS                                      -->
	<!-- ==================================================== -->
	<target name="display.build.classpath" description="Displays the build classpath">
		<property name="temp" refid="build.classpath" />
		<echo message="Build classpath is ${temp}" />
	</target>

</project>